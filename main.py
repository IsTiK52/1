import os
import telebot
import json
import datetime

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
BOT_TOKEN = os.environ.get("BOT_TOKEN")

bot = telebot.TeleBot(BOT_TOKEN)

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
SCHEDULE_PATH = "words_schedule.json"
PROGRESS_PATH = "progress.csv"
REPETITION_PATH = "repetition.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
with open(SCHEDULE_PATH, encoding="utf-8") as f:
    schedule = json.load(f)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
def get_today_words():
    today = datetime.datetime.now().strftime("%Y-%m-%d")
    return schedule.get(today)

# –ö–æ–º–∞–Ω–¥–∞ /start
from telebot import types

@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üìò –°–ª–æ–≤–∞ –¥–Ω—è", "üîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ")
    markup.add("üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø VocabularBot. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üìò –°–ª–æ–≤–∞ –¥–Ω—è.", reply_markup=markup)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda m: True)
def menu(message):
    if message.text == "üìò –°–ª–æ–≤–∞ –¥–Ω—è":
        data = get_today_words()
        if not data:
            bot.send_message(message.chat.id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Å–ª–æ–≤ –Ω–µ—Ç.")
            return
        theme = data["theme"]
        text = f"üéØ –¢–µ–º–∞: {theme}\n\n"
        for w in data["words"]:
            text += f"üîπ *{w['word']}* ({w['pos']}) ‚Äî {w['translation']}\n_{w['example']}_\n\n"
        bot.send_message(message.chat.id, text, parse_mode="Markdown")
    elif message.text == "üîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ":
        with open(REPETITION_PATH, encoding="utf-8") as f:
            rep = json.load(f)
        words = rep.get(str(message.from_user.id), [])
        text = "\n".join(f"üîÅ {w}" for w in words) if words else "–ù–µ—Ç —Å–ª–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è."
        bot.send_message(message.chat.id, text)
    elif message.text == "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å":
        with open(PROGRESS_PATH, encoding="utf-8") as f:
            lines = f.readlines()[1:]
        dates = {line.split(",")[1] for line in lines if str(message.from_user.id) in line}
        bot.send_message(message.chat.id, f"üìà –ü—Ä–æ–π–¥–µ–Ω–æ –¥–Ω–µ–π: {len(dates)}")

bot.polling()
